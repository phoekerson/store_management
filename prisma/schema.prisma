// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  firstname  String
  lastname   String
  email      String   @unique
  password   String
  roles_id   Int
  role       Role     @relation(fields: [roles_id], references: [id])
  sales      Sale[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("users")
}

model Role {
  id         Int      @id @default(autoincrement())
  role_name  String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  users      User[]

  @@map("roles")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String   @db.Text
  price       Float
  image       String?
  stock       Int      @default(0)
  bills       Bill[]
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  @@map("products")
}

model Sale {
  id         Int       @id @default(autoincrement())
  sale_code  String    @unique
  user       User      @relation(fields: [users_id], references: [id])
  users_id   Int
  payments   Payment[]
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt

  @@map("sales")
}

model Bill {
  id          Int      @id @default(autoincrement())
  product     Product  @relation(fields: [products_id], references: [id])
  products_id Int
  qty         Int
  prix_vente  Float
  total       Float
  bill_code   String   @unique
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  @@map("bills")
}

model Payment {
  id            Int       @id @default(autoincrement())
  paymethod     Paymethod @relation(fields: [paymethods_id], references: [id])
  paymethods_id Int
  sale          Sale      @relation(fields: [sales_id], references: [id])
  sales_id      Int
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt

  @@map("payments")
}

model Paymethod {
  id         Int       @id @default(autoincrement())
  pay_name   String
  payments   Payment[]
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt

  @@map("paymethods")
}
